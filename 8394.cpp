#include <iostream>
using namespace std;

int dp[10000001];
/*
* 악수
* (이 문제는 피보나치 수열과 정확히 일치한다.
* 이 문제가 왜 피보나치 수열을 이루는 지를 알기 위해서는 사람 한 명이 늘었을 경우
* 어떻게 악수할 수 있는 경우의 수가 변하는지를 살펴보면 된다.
* 예를 들어 (n-1)명에서 n명으로 악수할 수 있는 사람이 한 명이 늘 경우에, 
* 새롭게 추가된 사람이 악수를 할 경우와 하지 않을 경우를 나눠서 살펴 본다. 
* 이 새롭게 추가된 사람이 아무하고도 악수를 하지 않는다면 이것은 단순히 바로 이전의
* 경우의 수와 같으며(n-1), 악수를 한다면 분명히 바로 뒤에 있는 사람과 악수를 할 수 밖에
* 없으므로 (n-2)에서의 악수할 수 있는 경우에다가 이 경우를 갖다 붙이면 된다.
* 따라서 n명일 때 악수를 할 수 있는 경우의 수는 (n-1)명 일때의 경우의 수와 (n-2)명 일때의
* 경우의 수를 더해주면 된다.
*/
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int n;
	cin >> n;
	dp[1] = 1;
	dp[2] = 2;
	for (int i = 3; i <= n; i++)
		dp[i] = (dp[i - 1] + dp[i - 2]) % 10;
	cout << dp[n];

	return 0;
}